{"version":3,"sources":["components/common/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/FormControls/FormControlsWithFormik.tsx","components/common/FormControls/FormControls.module.css","images/headerOptions/user.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataFormik.tsx","reduxx/profile-selectors.ts","components/Profile/ProfileInfo/Contact.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","images/like.svg","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainerHooks.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Textarea","label","name","key","rest","className","classes","formik_controls","htmlFor","as","id","component","ErrorText","Input","error","children","FormControlsWithFormik","control","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","hover","setHover","useEffect","status_text","onMouseOver","onMouseOut","onDoubleClick","authorizedUserId","profile","userId","status_popup","onChange","e","preventDefault","currentTarget","onStatusChange","autoFocus","onBlur","updateStatus","ProfileDataFormik","onSubmit","errorMessage","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","validationSchema","Yup","required","formik","placeholder","type","keys","map","getProfileSelector","profilePage","getStatusSelector","getAuthorizedUserIdSelector","getErrorMessageSelector","getPostsSelector","posts","Contact","contactTitle","contactValue","profile_data_item","ProfileData","isOwner","goToEditMode","onClick","ProfileInfo","useSelector","dispatch","useDispatch","Preloader","hiddenFileInput","React","createRef","profile_info","img_container","img","src","photos","large","userPhoto","alt","current","click","profile_photo_input","ref","target","files","savePhotoThunk","updateStatusThunk","profile_data","values","saveProfileThunk","saveProfile","then","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref","svgRef","title","x","y","viewBox","style","enableBackground","xmlSpace","ForwardRef","forwardRef","Post","UserImg","small","post","post__item","post___content","delete_button","event","deletePost","post_message","message","likes_container","likes","likesCount","liked","actionsProfileReducer","likedPost","AddPostFormik","newPostText","max","resetForm","button","MyPostsMemorized","memo","deletePostText","postID","postsElements","reverse","postForm","user","userImg","addPost","addPost_item","newPostId","Profile","ProfilePageWithAuth","withRouter","history","useHistory","refreshProfile","match","params","getProfileThunk","getProfile","getStatusThunk","getStatus","console"],"mappings":"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","file":"static/js/6.5f7a2b9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppRootStateType } from '../../reduxx/redux-store';\r\n\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    \r\n\r\n    const RedirectComponent: React.FC<MapStatePropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <WrappedComponent {...restProps as WCP} />\r\n    }\r\n\r\n\r\n\r\n    return connect<MapStatePropsType, unknown, WCP, AppRootStateType>(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport { Field, ErrorMessage } from 'formik';\r\n\r\ntype FormControlPropsType = {\r\n    control: 'input' | 'textarea'\r\n}\r\n\r\ntype FormItemPropsType = {\r\n    label?: string\r\n    name: string\r\n    key?: string\r\n    placeholder: string\r\n    type?: string\r\n    className?: string\r\n}\r\n\r\nconst FormControlsWithFormik: React.FC<FormControlPropsType & FormItemPropsType> = (props) => {\r\n    const { control, ...rest } = props;\r\n    switch (control) {\r\n        case 'input':\r\n            return <Input {...rest} />\r\n        case 'textarea':\r\n            return <Textarea {...rest} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\n\r\nconst Textarea: React.FC<FormItemPropsType>  = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field as='textarea' key={key} id={name} name={name} {...rest}/>\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Input: React.FC<FormItemPropsType> = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field id={name} key={key} name={name} {...rest} />\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ErrorText: React.FC = (props) => {\r\n    return <div className={classes.error} >\r\n        {props.children}\r\n    </div>\r\n}\r\n    \r\n    \r\n\r\n\r\nexport default FormControlsWithFormik;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__4c7Yh\",\"error\":\"FormControls_error__uKFST\",\"App\":\"FormControls_App__3XoIW\",\"input\":\"FormControls_input__229Xk\",\"forms_control\":\"FormControls_forms_control__1AmpX\"};","module.exports = __webpack_public_path__ + \"static/media/user.c3dacb0b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info\":\"ProfileInfo_profile_info__3V6jF\",\"img_container\":\"ProfileInfo_img_container__1spJ7\",\"img\":\"ProfileInfo_img__OSL9u\",\"profile_photo_input\":\"ProfileInfo_profile_photo_input__2nWkW\",\"status\":\"ProfileInfo_status__2fcwA\",\"status_text\":\"ProfileInfo_status_text__2f3G-\",\"form_error\":\"ProfileInfo_form_error__iEUvC\",\"profile_data\":\"ProfileInfo_profile_data__2nEVh\",\"profile_data_item\":\"ProfileInfo_profile_data_item__v-S0Q\",\"status_popup\":\"ProfileInfo_status_popup__oMm17\",\"addPost_item\":\"ProfileInfo_addPost_item__y29qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__F8YN9\",\"userImg\":\"Profile_userImg__2qokz\",\"user\":\"Profile_user__DrajQ\",\"postForm\":\"Profile_postForm__2-TE4\",\"addPost\":\"Profile_addPost__1Ck26\",\"button\":\"Profile_button__1kYAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3rTv6\",\"post\":\"Post_post__3PbZK\",\"post__item\":\"Post_post__item__2S5Qo\",\"post___content\":\"Post_post___content__3s8Vl\",\"post_message\":\"Post_post_message__3IWbM\",\"likes_container\":\"Post_likes_container__1i5gj\",\"likes\":\"Post_likes__36odM\",\"liked\":\"Post_liked__yrO5v\"};","import React, { useEffect, useState } from 'react'\r\nimport { ProfileType } from '../../../../types/types'\r\nimport classes from './../ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n  status: string\r\n  profile: ProfileType\r\n  authorizedUserId: number | null\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  let [hover, setHover] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activatedEditMode = () => {\r\n    if (props.authorizedUserId === props.profile.userId) {\r\n      setEditMode(true)\r\n    }\r\n  }\r\n\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  const handleMouseIn = () => {\r\n    setHover(true)\r\n  }\r\n\r\n  const handleMouseOut = () => {\r\n    setHover(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.status}>\r\n      {!editMode && (\r\n        <div className={classes.status_text}>\r\n          <div>\r\n            <b>Status: </b>\r\n            <span\r\n              onMouseOver={handleMouseIn}\r\n              onMouseOut={handleMouseOut}\r\n              onDoubleClick={activatedEditMode}\r\n            >\r\n              {' '}\r\n              {props.status || 'there is no status'}\r\n            </span>\r\n          </div>\r\n          {hover && props.authorizedUserId === props.profile.userId && (\r\n            <div className={classes.status_popup}>\r\n              DoubleClick to change status\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <input\r\n            onChange={(e) => {\r\n              onStatusChange(e)\r\n            }}\r\n            autoFocus={true}\r\n            onBlur={deactivatedEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik';\r\nimport classes from './ProfileInfo.module.css';\r\nimport * as Yup from 'yup';\r\nimport { ProfileType } from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    initialValues: ProfileType\r\n    onSubmit: (values: any) => void\r\n    errorMessage: string | null\r\n   \r\n}\r\n\r\nconst ProfileDataFormik: React.FC<PropsType> = ({ profile, onSubmit, errorMessage }) => {\r\n    debugger\r\n\r\n    return <Formik\r\n        initialValues={\r\n            {\r\n                fullName: profile.fullName,\r\n                lookingForAJob: false,\r\n                lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                aboutMe: profile.aboutMe,\r\n                contacts: profile.contacts\r\n            }}\r\n        validationSchema={Yup.object({\r\n            fullName: Yup.string().required('Required field'),\r\n            lookingForAJob: Yup.bool().required('Required field'),\r\n            lookingForAJobDescription: Yup.string().required('Required field'),\r\n            aboutMe: Yup.string().required('Required field'),\r\n            contacts: Yup.object().required('Required field'),\r\n        })}\r\n        onSubmit={onSubmit}>\r\n        {\r\n            formik => {\r\n                return <Form>\r\n                    <div>\r\n                        <b>FullName :</b>{profile.fullName}\r\n                        <FormControlsWithFormik control='input' name='fullName' placeholder='Write your name here' />\r\n                    </div>\r\n                    <div>\r\n                        <b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n                        <Field type='checkbox' name='lookingForAJob' />\r\n                    </div>\r\n                    <div>\r\n                        <b>My skills: </b>{profile.lookingForAJobDescription}\r\n                        <FormControlsWithFormik control='textarea' name='lookingForAJobDescription' placeholder='My skills' />\r\n                    </div>\r\n                    <div>\r\n                        <b>About me: </b>{profile.aboutMe}\r\n                        <FormControlsWithFormik control='textarea' name='aboutMe' placeholder='About me' />\r\n                    </div>\r\n                    <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key}>\r\n                            {key}: <FormControlsWithFormik key={key} control='input' name={'contacts.' + key} placeholder={key} />\r\n                        </div>\r\n                    })}</div>\r\n                    <div>\r\n                    <button type='submit'>Save</button>{errorMessage}\r\n                    </div>\r\n                </Form>\r\n            }\r\n        }\r\n    </Formik>\r\n}\r\n\r\nexport default ProfileDataFormik;","import { AppRootStateType } from './redux-store'\r\n\r\nexport const getProfileSelector = (state: AppRootStateType) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getStatusSelector = (state: AppRootStateType) => {\r\n    return state.profilePage.status\r\n}\r\nexport const getAuthorizedUserIdSelector = (state: AppRootStateType) => {\r\n    return state.auth.userId\r\n}\r\nexport const getErrorMessageSelector = (state: AppRootStateType) => {\r\n    return state.profilePage.errorMessage\r\n}\r\nexport const getPostsSelector = (state: AppRootStateType) => {\r\n    return state.profilePage.posts\r\n}","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\n\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nexport const Contact: React.FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\r\n    return <div>\r\n        <div className={classes.profile_data_item}><b> {contactTitle}</b>: <span>{contactValue}</span></div>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { ContactsType, ProfileType } from '../../../types/types';\r\nimport { Contact } from './Contact';\r\n\r\n\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => any\r\n}\r\n\r\n\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = ({profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n\r\n        <div className={classes.profile_data_item}><b>FullName :</b>{profile.fullName}</div>\r\n        <div className={classes.profile_data_item}><b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        {profile.lookingForAJob &&\r\n            <div className={classes.profile_data_item}><b>My skills: </b>{profile.lookingForAJobDescription}</div>\r\n        }\r\n\r\n        <div className={classes.profile_data_item}><b>About me: </b>{profile.aboutMe}</div>\r\n        <div className={classes.profile_data_item}><b>Contacts:</b>{Object.keys(profile.contacts).map((key) => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} /> // [index: string]: string\r\n\r\n        })}</div>\r\n        {isOwner && <div><button className={classes.profile_data_item} onClick={goToEditMode}>Edit</button></div>}\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader';\r\nimport userPhoto from '../../../images/headerOptions/user.svg';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataFormik from './ProfileDataFormik';\r\nimport { ProfileType } from '../../../types/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuthorizedUserIdSelector, getErrorMessageSelector, getProfileSelector, getStatusSelector } from '../../../reduxx/profile-selectors';\r\nimport { savePhotoThunk, saveProfileThunk, updateStatusThunk} from '../../../reduxx/profile-reducer';\r\nimport { ProfileData } from './ProfileData';\r\nimport { getUserId } from '../../../reduxx/auth-selectors';\r\nimport { getAuthUserPhotoThunk } from '../../../reduxx/auth-reducer';\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\n    \r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({ isOwner }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const profile = useSelector(getProfileSelector)\r\n    const status = useSelector(getStatusSelector)\r\n    const authorizedUserId = useSelector(getAuthorizedUserIdSelector)\r\n    const errorMessage = useSelector(getErrorMessageSelector)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const hiddenFileInput = React.createRef<HTMLInputElement>();\r\n\r\n    const handleClick = () => {\r\n        hiddenFileInput.current!.click();\r\n    }\r\n\r\n    const onPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            dispatch(savePhotoThunk(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    const updateStatus = (status: string) => {\r\n       dispatch(updateStatusThunk(status))\r\n    }\r\n\r\n    const saveProfile = (values: ProfileType): any => {\r\n      return dispatch(saveProfileThunk(values))\r\n    }\r\n\r\n    const onSubmit =  (values: ProfileType) => {\r\n        debugger\r\n        saveProfile(values).then(\r\n            () => {\r\n                debugger\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n   \r\n\r\n    return <div className={classes.profile_info}>\r\n        <div className={classes.img_container}>\r\n            <img className={classes.img} src={profile.photos.large || userPhoto} alt=\"\" />\r\n            {isOwner && <div>\r\n                <button onClick={handleClick}>Change Photo</button>\r\n                <input className={classes.profile_photo_input} ref={hiddenFileInput} type='file' onChange={onPhotoSelected} /></div>}\r\n            <ProfileStatusWithHooks\r\n                profile={profile}\r\n                authorizedUserId={authorizedUserId}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n        <div className={classes.profile_data}>\r\n            {editMode\r\n                ? <ProfileDataFormik initialValues={profile} profile={profile} onSubmit={onSubmit} errorMessage={errorMessage} />\r\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M83.578,167.256H16.716C7.524,167.256,0,174.742,0,183.971v300.881c0,9.225,7.491,16.713,16.716,16.713h66.862 c9.225,0,16.716-7.489,16.716-16.713V183.971C100.294,174.742,92.769,167.256,83.578,167.256z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M470.266,167.256c-2.692-0.456-128.739,0-128.739,0l17.606-48.032c12.148-33.174,4.283-83.827-29.424-101.835 c-10.975-5.864-26.309-8.809-38.672-5.697c-7.09,1.784-13.321,6.478-17.035,12.767c-4.271,7.233-3.83,15.676-5.351,23.696 c-3.857,20.342-13.469,39.683-28.354,54.2c-25.952,25.311-106.571,98.331-106.571,98.331v267.45h278.593 c37.592,0.022,62.228-41.958,43.687-74.749c22.101-14.155,29.66-43.97,16.716-66.862c22.102-14.155,29.66-43.97,16.716-66.862 C527.572,235.24,514.823,174.792,470.266,167.256z\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgLike = function SvgLike(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.999 511.999\",\n    style: {\n      enableBackground: \"new 0 0 511.999 511.999\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLike, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/like.c82941a4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport classes from './Post.module.css'\r\nimport UserImg from './../../../../images/sideBar/user.svg'\r\nimport { useState } from 'react'\r\nimport { ReactComponent as LikesCountImg } from './../../../../images/like.svg'\r\nimport { ProfileType } from '../../../../types/types'\r\nimport { actionsProfileReducer } from '../../../../reduxx/profile-reducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\ntype PropsType = {\r\n  likesCount: number\r\n  message: string\r\n  profile: ProfileType | null\r\n  deletePost: (postID: number) => void\r\n  id: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n  let userPhoto = UserImg\r\n  if (props.profile) {\r\n    if (props.profile.photos.small) userPhoto = props.profile.photos.small\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onSetLikesCount = () => {\r\n    dispatch(actionsProfileReducer.likedPost(props.id))\r\n  }\r\n\r\n  const onDeletePost = (event: React.MouseEvent) => {\r\n    event.preventDefault()\r\n    props.deletePost(props.id)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.post__item}>\r\n        <div className={classes.post___content}>\r\n          <img className={classes.img} src={userPhoto} alt=\"\" />\r\n          {props.profile && (\r\n            <h3 className={classes.name}>{props.profile.fullName}</h3>\r\n          )}\r\n        </div>\r\n        <button className={classes.delete_button} onClick={onDeletePost}>\r\n          DELETE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <p className={classes.post_message}>{props.message}</p>\r\n\r\n        <div className={classes.likes_container}>\r\n          <div>\r\n            <LikesCountImg\r\n              className={`${classes.likes} ${\r\n                props.likesCount > 0 && classes.liked\r\n              }`}\r\n              onClick={() => onSetLikesCount()}\r\n            />\r\n          </div>\r\n          <b> {props.likesCount}</b>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport classes from '../Profile.module.css'\r\nimport Post from './Posts/Post'\r\nimport UserImg from '../../../images/sideBar/user.svg'\r\nimport Preloader from '../../common/Preloader'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getPostsSelector,\r\n  getProfileSelector,\r\n} from '../../../reduxx/profile-selectors'\r\nimport { actionsProfileReducer } from '../../../reduxx/profile-reducer'\r\n\r\ntype PropsType = {}\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n  const posts = useSelector(getPostsSelector)\r\n  const profile = useSelector(getProfileSelector)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const addPostText = (values: any) => {\r\n    let newPostId = posts.length\r\n    dispatch(actionsProfileReducer.addPost(values.newPostText, newPostId))\r\n  }\r\n\r\n  const deletePostText = (postID: number) => {\r\n    dispatch(actionsProfileReducer.deletePost(postID))\r\n  }\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  let userPhoto = UserImg\r\n  if (profile.photos.small) {\r\n    userPhoto = profile.photos.small\r\n  }\r\n\r\n  let postsElements = [...posts]\r\n    .reverse()\r\n    .map((post) => (\r\n      <Post\r\n        profile={profile}\r\n        key={post.id}\r\n        id={post.id}\r\n        message={post.message}\r\n        likesCount={post.likesCount}\r\n        deletePost={deletePostText}\r\n      />\r\n    ))\r\n\r\n  return (\r\n    <div className={classes.posts}>\r\n      <div>\r\n        <div className={classes.postForm}>\r\n          <div className={classes.user}>\r\n            <img className={classes.userImg} src={userPhoto} alt=\"\" />\r\n            <h3>{profile.fullName}</h3>\r\n          </div>\r\n          <div className={classes.addPost}>\r\n            <div className={classes.addPost_item}>\r\n              <AddPostFormik onSubmit={addPostText} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {postsElements}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype AddPostFormikType = {\r\n  onSubmit: (newPostText: string) => void\r\n}\r\n\r\nconst AddPostFormik: React.FC<AddPostFormikType> = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ newPostText: '' }}\r\n      validationSchema={Yup.object({\r\n        newPostText: Yup.string().required('Cannot send an empty post').max(50),\r\n      })}\r\n      onSubmit={(values: any, { resetForm }) => {\r\n        props.onSubmit(values)\r\n        resetForm()\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Form>\r\n            <FormControlsWithFormik\r\n              control=\"textarea\"\r\n              name=\"newPostText\"\r\n              placeholder=\"Write your text here\"\r\n            />\r\n            <button className={classes.button} type=\"submit\">\r\n              Send\r\n            </button>\r\n          </Form>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst MyPostsMemorized = React.memo(MyPosts)\r\n\r\nexport default MyPostsMemorized\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n  \r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return <div className={classes.profile} >\r\n\r\n        <ProfileInfo isOwner={props.isOwner} />\r\n        <MyPosts />\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProfileThunk, getStatusThunk } from '../../reduxx/profile-reducer'\r\nimport { RouteComponentProps, useHistory, withRouter } from 'react-router-dom'\r\nimport { getAuthorizedUserIdSelector } from '../../reduxx/profile-selectors'\r\nimport { withAuthRedirect } from '../common/withAuthRedirect'\r\n\r\ntype RouteComponentParamsProps = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<RouteComponentParamsProps>\r\n\r\nconst ProfileContainerWithHooks: React.FC<PropsType> = (props) => {\r\n  let history = useHistory()\r\n\r\n  const authorizedUserId = useSelector(getAuthorizedUserIdSelector)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const getProfile = (userId: number) => {\r\n    dispatch(getProfileThunk(userId))\r\n  }\r\n\r\n  const getStatus = (userId: number) => {\r\n    dispatch(getStatusThunk(userId))\r\n  }\r\n\r\n  const refreshProfile = () => {\r\n    let userId: number | null = +props.match.params.userId\r\n\r\n    if (!userId) {\r\n      userId = authorizedUserId\r\n\r\n      if (!userId) {\r\n        history.push('/login')\r\n      }\r\n    }\r\n\r\n    if (!userId) {\r\n      console.error('UserID should exist!!!')\r\n    } else {\r\n      getProfile(userId)\r\n      getStatus(userId)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshProfile()\r\n  })\r\n\r\n  return <Profile isOwner={!props.match.params.userId} />\r\n}\r\n\r\nexport const ProfilePageWithAuth = withAuthRedirect(\r\n  withRouter(ProfileContainerWithHooks)\r\n)\r\n"],"sourceRoot":""}