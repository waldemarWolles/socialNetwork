{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/withAuthRedirect.jsx","components/Profile/Profile.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","children","Textarea","restProps","Input","createField","placeholder","validators","name","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatus","editMode","status","activatedEditMode","setState","deactivatedEditMode","updateStatusThunk","onStatusChange","e","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profile","src","photos","large","alt","Preloader","Post","className","classes","post","post__item","img","UserImg","message","likesCount","MyPosts","memo","console","log","postsElements","posts","map","postForm","user","userImg","addPost","AddPostReduxForm","onSubmit","values","newPostText","maxLength30","reduxForm","form","handleSubmit","Field","profilePage","dispatch","addPostActionCreator","updateNewPostText","updateNewPostTextActionCreator","Profile","MyPostsContainer","ProfileContainer","componentDidMount","userId","match","params","authorizedUserId","history","push","getProfileThunk","getStatusThunk","compose","withRouter"],"mappings":"+QAIMA,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAElDC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEpC,OACI,6BACI,6BACKJ,EAAMK,UAEX,6BACKH,GAAY,8BAAQH,EAAKK,UAM7BE,EAAW,SAACN,GAAW,IACxBF,EAAqCE,EAArCF,MAAuBS,GAAcP,EAA9BD,KAA8BC,EAAxBC,MADU,YACcD,EADd,2BAE/B,OACI,6BACI,kBAACH,EAAgBG,EAAO,8CAAcF,EAAWS,OAKhDC,EAAQ,SAACR,GAAW,IACrBF,EAAqCE,EAArCF,MAAuBS,GAAcP,EAA9BD,KAA8BC,EAAxBC,MADO,YACiBD,EADjB,2BAE5B,OACI,6BACI,kBAACH,EAAgBG,EAAO,2CAAWF,EAAWS,OAM7CE,EAAc,SAACC,EAAaC,EAAYC,EAAMC,GAAhC,IAA2Cb,EAA3C,uDAAmD,GAAIc,EAAvD,uDAA8D,GAA9D,OACvB,6BACK,kBAAC,IAAD,eAAOJ,YAAaA,EAAaK,SAAUJ,EAAYC,KAAMA,EAAMC,UAAWA,GAAeb,IAAUc,K,oBCxChHE,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,8B,iCCD5E,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAGA,EAEH,MAAO,qBAIEC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAC3C,GAAGA,EAAMG,OAASD,EAAW,MAAM,cAAN,OAAqBA,EAArB,e,sICF7BE,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IAGtCC,EAHqC,uKAMnC,OAAIC,KAAK9B,MAAMyB,OAER,kBAACG,EAAcE,KAAK9B,OAFG,kBAAC,IAAD,CAAU+B,GAAG,eANR,GAGXC,IAAMJ,WAYtC,OAHoCK,YAAQV,EAARU,CAAyBJ,K,oBCvBjEb,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,oBCAtMD,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,mBAAmB,WAAa,2B,sHCiElEiB,E,4MA7DXV,MAAQ,CACJW,UAAU,EACVC,OAAQ,EAAKpC,MAAMoC,Q,EAGvBC,kBAAoB,WAChB,EAAKC,SAAS,CACVH,UAAU,K,EAIlBI,oBAAsB,WAClB,EAAKD,SAAS,CACVH,UAAU,IAEd,EAAKnC,MAAMwC,kBAAkB,EAAKhB,MAAMY,S,EAG5CK,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVF,OAAQM,EAAEC,cAAcxB,S,iEAIbyB,EAAWC,GAEvBD,EAAUR,SAAWN,KAAK9B,MAAMoC,QAE/BN,KAAKQ,SAAS,CACVF,OAAQN,KAAK9B,MAAMoC,W,+BAS3B,OAAO,8BAEDN,KAAKN,MAAMW,UACT,6BACI,0BAAMW,cAAehB,KAAKO,mBAAoBP,KAAK9B,MAAMoC,QAAU,uBAI1EN,KAAKN,MAAMW,UACR,6BACI,2BAAQY,SAAUjB,KAAKW,eAAgBO,WAAW,EAAMC,OAAQnB,KAAKS,oBAAqBpB,MAAOW,KAAKN,MAAMY,e,GAlDpGJ,IAAMJ,WCenBsB,EAbK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,QAASf,EAAgC,EAAhCA,OAAQI,EAAwB,EAAxBA,kBAEnC,OAAIW,EAIG,6BACH,6BAAK,yBAAKC,IAAKD,EAAQE,OAAOC,MAAOC,IAAI,MACzC,6BAAK,kBAAC,EAAD,CAAenB,OAAQA,EAAQI,kBAAmBA,MALhD,kBAACgB,EAAA,EAAD,O,2DCcAC,EAjBF,SAACzD,GACV,OACI,yBAAK0D,UAAWC,IAAQC,MACpB,yBAAKF,UAAWC,IAAQE,YACpB,yBAAKH,UAAWC,IAAQG,IAAKV,IAAKW,IAASR,IAAI,KAC/C,wBAAIG,UAAWC,IAAQ/C,MAAvB,cAEJ,6BACK,2BAAIZ,EAAMgE,SADf,cAEiBhE,EAAMiE,c,oCCL7BC,EAAUlC,IAAMmC,MAAK,SAAAnE,GAEvBoE,QAAQC,IAAI,UAEZ,IAAIC,EAAgB,YAAItE,EAAMuE,OAAOC,KAAI,SAAAZ,GAAI,OAAI,kBAAC,EAAD,CAAMI,QAASJ,EAAKI,QAASC,WAAYL,EAAKK,gBAQ/F,OACI,yBAAKP,UAAWC,IAAQY,OACpB,6BAEI,yBAAKb,UAAWC,IAAQc,UACpB,yBAAKf,UAAWC,IAAQe,MACpB,yBAAKhB,UAAWC,IAAQgB,QAASvB,IAAKW,IAASR,IAAI,KACnD,0CAEJ,yBAAKG,UAAWC,IAAQiB,SACpB,kBAACC,EAAD,CAAkBC,SAfpB,SAACC,GACf/E,EAAM4E,QAAQG,EAAOC,mBAkBfV,MAOTW,EAAc7D,YAAiB,IAY9ByD,EAAmBK,YAAU,CAC/BC,KAAM,QADeD,EAVL,SAAClF,GACjB,OACI,0BAAM8E,SAAU9E,EAAMoF,cAClB,kBAACC,EAAA,EAAD,CAAOxE,UAAWP,IAAUM,KAAK,cAAcG,SAAU,CAACG,IAAU+D,GAAcvE,YAAa,yBAE/F,gDAWGwD,IChCAjC,eApBS,SAACT,GACrB,MAAO,CACH+C,MAAO/C,EAAM8D,YAAYf,MACzBS,YAAaxD,EAAM8D,YAAYN,gBAIZ,SAACO,GACxB,MAAO,CACHX,QAAS,SAACI,GACNO,EAASC,YAAqBR,KAGlCS,kBAAmB,SAAC3E,GAChByE,EAASG,YAA+B5E,QAMrCmB,CAA6CiC,GCT7CyB,EAZC,SAAC3F,GACb,OAAO,yBAAK0D,UAAWC,IAAQR,SAE3B,kBAAC,EAAD,CAAaA,QAASnD,EAAMmD,QAASf,OAAQpC,EAAMoC,OAAQI,kBAAmBxC,EAAMwC,oBACpF,kBAACoD,EAAD,Q,wBCDFC,E,4MAEFC,kBAAoB,WAEhB,IAAIC,EAAS,EAAK/F,MAAMgG,MAAMC,OAAOF,OAChCA,IACDA,EAAS,EAAK/F,MAAMkG,mBAGhB,EAAKlG,MAAMmG,QAAQC,KAAK,UAIhC,EAAKpG,MAAMqG,gBAAgBN,GAC3B,EAAK/F,MAAMsG,eAAeP,I,uDAI1B,OACI,kBAAC,EAAD,iBAAajE,KAAK9B,MAAlB,CACImD,QAASrB,KAAK9B,MAAMmD,QACpBf,OAAQN,KAAK9B,MAAMoC,OACnBI,kBAAmBV,KAAK9B,MAAMwC,yB,GAtBfR,IAAMJ,WAqCtB2E,sBACXtE,aAVoB,SAACT,GAAD,MAAY,CAChC2B,QAAS3B,EAAM8D,YAAYnC,QAC3Bf,OAAQZ,EAAM8D,YAAYlD,OAC1B8D,iBAAkB1E,EAAME,KAAKqE,OAC7BtE,OAAQD,EAAME,KAAKD,UAMM,CAAE4E,oBAAiBC,mBAAgB9D,wBAC5DgE,IAFWD,CAGbV","file":"static/js/4.2f80d490.chunk.js","sourcesContent":["import classes from './FormControls.module.css';\r\nimport React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span >{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const createField = (placeholder, validators, name, component, props = {}, text = '') => (\r\n    <div>\r\n         <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props} />{text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__4c7Yh\",\"error\":\"FormControls_error__uKFST\"};","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is reauired';\r\n}\r\n\r\n\r\nexport const maxLengthCreator= (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `max length ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectdAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n\r\n    return ConnectdAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__F8YN9\",\"userImg\":\"Profile_userImg__2qokz\",\"user\":\"Profile_user__DrajQ\",\"postForm\":\"Profile_postForm__2-TE4\",\"addPost\":\"Profile_addPost__1Ck26\",\"button\":\"Profile_button__1kYAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3rTv6\",\"post\":\"Post_post__3PbZK\",\"post__item\":\"Post_post__item__2S5Qo\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activatedEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivatedEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatusThunk(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status)\r\n        {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return <div>\r\n\r\n            {!this.state.editMode &&\r\n                <div >\r\n                    <span onDoubleClick={this.activatedEditMode}>{this.props.status || 'there is no status'}</span>\r\n                </div>\r\n            }\r\n\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input  onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivatedEditMode} value={this.state.status} />\r\n                </div>\r\n             }\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusThunk }) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader />;\r\n    }\r\n  \r\n    return <div>\r\n        <div><img src={profile.photos.large} alt=\"\"/></div>\r\n        <div><ProfileStatus status={status} updateStatusThunk={updateStatusThunk} /></div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport UserImg from './../../../../images/sideBar/user.svg';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.post__item}>\r\n                <img className={classes.img} src={UserImg} alt=\"\" /> \r\n                <h3 className={classes.name}>User Name</h3>\r\n            </div>\r\n            <div>\r\n                 <p>{props.message}</p>\r\n                 likesCount {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from '../Profile.module.css';\r\nimport Post from './Posts/Post';\r\nimport UserImg from '../../../images/sideBar/user.svg';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required,  maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls.jsx';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log('RENDER');\r\n\r\n    let postsElements = [...props.posts].map(post => <Post message={post.message} likesCount={post.likesCount} />)\r\n\r\n\r\n    let addPostText = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div>\r\n\r\n                <div className={classes.postForm}>\r\n                    <div className={classes.user}>\r\n                        <img className={classes.userImg} src={UserImg} alt=\"\" />\r\n                        <h3>User Name</h3>\r\n                    </div>\r\n                    <div className={classes.addPost}>\r\n                        <AddPostReduxForm onSubmit={addPostText}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { postsElements}\r\n\r\n        </div>\r\n    );\r\n\r\n});\r\n\r\nlet  maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name='newPostText' validate={[required, maxLength30]} placeholder={'Write your text here'} />\r\n\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(AddPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../reduxx/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    } \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div className={classes.profile} >\r\n       \r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n        <MyPostsContainer />\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileThunk, getStatusThunk, updateStatusThunk } from '../../reduxx/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../common/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatusThunk={this.props.updateStatusThunk}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfileThunk, getStatusThunk, updateStatusThunk }),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}