{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/FormControls/FormControlsWithFormik.js","components/common/FormControls/FormControls.module.css","images/headerOptions/user.svg","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataFormik.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","images/like.svg","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Textarea","props","label","name","key","rest","className","classes","formik_controls","htmlFor","as","id","component","ErrorText","Input","CheckBoxes","options","field","map","option","Fragment","type","checked","includes","error","children","FormControlsWithFormik","control","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","hover","setHover","useEffect","status_text","onMouseOver","onMouseOut","onDoubleClick","authorizedUserId","profile","userId","status_popup","onChange","e","preventDefault","currentTarget","onStatusChange","autoFocus","onBlur","updateStatusThunk","ProfileDataFormik","onSubmit","errorMessage","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","validationSchema","Yup","required","formik","placeholder","keys","ProfileData","isOwner","goToEditMode","profile_data_item","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhotoThunk","saveProfileThunk","Preloader","hiddenFileInput","React","createRef","profile_info","img_container","img","src","photos","large","userPhoto","alt","current","click","profile_photo_input","ref","target","files","profile_data","values","then","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref","svgRef","title","x","y","viewBox","style","enableBackground","xmlSpace","ForwardRef","forwardRef","Post","likesCount","setLikesCount","UserImg","small","post","post__item","post___content","delete_button","event","deletePost","post_message","message","likes_container","likes","liked","onSetLikesCount","AddPostFormik","newPostText","max","resetForm","button","MyPostsMemorized","memo","console","log","postsElements","posts","newPostId","postForm","user","userImg","addPost","addPost_item","Profile","ProfileContainer","refreshProfile","match","params","history","getProfileThunk","getStatusThunk","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","Component","compose","connect","state","profilePage","auth","isAuth","actionsProfileReducer","withRouter"],"mappings":"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","file":"static/js/5.47253aec.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport { Field, ErrorMessage } from 'formik';\r\n\r\nconst FormControlsWithFormik = (props) => {\r\n    const { control, ...rest } = props;\r\n    switch (control) {\r\n        case 'input':\r\n            return <Input {...rest} />\r\n        case 'textarea':\r\n            return <Textarea {...rest} />\r\n        case 'checkbox':\r\n           return <CheckBoxes {...rest} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nconst Textarea = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field as='textarea' key={key} id={name} name={name} {...rest}/>\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\nconst Input = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field id={name} key={key} name={name} {...rest} />\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CheckBoxes = (props) => {\r\n    const { label, name, options, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label>{label}</label>\r\n           <Field name={name} {...rest}>\r\n                {\r\n                    ({field}) => {\r\n                      return options.map(option => {\r\n                          return (\r\n                          <React.Fragment key={option.key}>\r\n                             <input \r\n                                type=\"checkbox\"\r\n                                id={option.value}\r\n                                {...field}\r\n                                value={option.value}\r\n                                checked={field.value.includes(option.value)}\r\n                             />\r\n                             <label htmlFor={option.value}>{option.key}</label>\r\n                          </React.Fragment>\r\n                            )\r\n                    \r\n                      })\r\n                    }\r\n                }\r\n           </Field>\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ErrorText = (props) => {\r\n    return <div className={classes.error} >\r\n        {props.children}\r\n    </div>\r\n}\r\n    \r\n    \r\n\r\n\r\nexport default FormControlsWithFormik;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__4c7Yh\",\"error\":\"FormControls_error__uKFST\",\"App\":\"FormControls_App__3XoIW\",\"input\":\"FormControls_input__229Xk\",\"forms_control\":\"FormControls_forms_control__1AmpX\"};","module.exports = __webpack_public_path__ + \"static/media/user.c3dacb0b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__F8YN9\",\"userImg\":\"Profile_userImg__2qokz\",\"user\":\"Profile_user__DrajQ\",\"postForm\":\"Profile_postForm__2-TE4\",\"addPost\":\"Profile_addPost__1Ck26\",\"button\":\"Profile_button__1kYAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info\":\"ProfileInfo_profile_info__3V6jF\",\"img_container\":\"ProfileInfo_img_container__1spJ7\",\"img\":\"ProfileInfo_img__OSL9u\",\"profile_photo_input\":\"ProfileInfo_profile_photo_input__2nWkW\",\"status\":\"ProfileInfo_status__2fcwA\",\"status_text\":\"ProfileInfo_status_text__2f3G-\",\"form_error\":\"ProfileInfo_form_error__iEUvC\",\"profile_data\":\"ProfileInfo_profile_data__2nEVh\",\"profile_data_item\":\"ProfileInfo_profile_data_item__v-S0Q\",\"status_popup\":\"ProfileInfo_status_popup__oMm17\",\"addPost_item\":\"ProfileInfo_addPost_item__y29qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3rTv6\",\"post\":\"Post_post__3PbZK\",\"post__item\":\"Post_post__item__2S5Qo\",\"post___content\":\"Post_post___content__3s8Vl\",\"post_message\":\"Post_post_message__3IWbM\",\"likes_container\":\"Post_likes_container__1i5gj\",\"likes\":\"Post_likes__36odM\",\"liked\":\"Post_liked__yrO5v\"};","import React, { useEffect, useState } from 'react';\r\nimport { ProfileType } from '../../../../types/types';\r\nimport classes from './../ProfileInfo.module.css';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    profile: ProfileType\r\n    authorizedUserId: number | null\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let [hover, setHover] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        if (props.authorizedUserId === props.profile.userId) {\r\n            setEditMode(true);\r\n        }\r\n\r\n    }\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    }\r\n\r\n    const onStatusChange = (e:React.ChangeEvent<HTMLInputElement> ) => {\r\n        e.preventDefault()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const handleMouseIn = () => {\r\n        setHover(true);\r\n    }\r\n\r\n    const handleMouseOut = () => {\r\n        setHover(false);\r\n    }\r\n\r\n    debugger;\r\n    return <div className={classes.status}>\r\n\r\n        {!editMode &&\r\n            <div className={classes.status_text}>\r\n                <div >\r\n                    <b>Status: </b>\r\n                    <span \r\n                        onMouseOver={handleMouseIn}\r\n                        onMouseOut={handleMouseOut}\r\n                        onDoubleClick={activatedEditMode}> {props.status || 'there is no status'}\r\n                    </span>\r\n                </div>\r\n                {hover && props.authorizedUserId === props.profile.userId &&\r\n                    <div className={classes.status_popup}>DoubleClick to change status</div>}\r\n            </div>\r\n        }\r\n\r\n        {editMode &&\r\n            <div>\r\n                <b>Status: </b>\r\n                <input onChange={(e) => {onStatusChange(e)}} autoFocus={true} onBlur={deactivatedEditMode} value={status} />\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik';\r\nimport classes from './ProfileInfo.module.css';\r\nimport * as Yup from 'yup';\r\nimport { ProfileType } from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    initialValues: ProfileType\r\n    onSubmit: (values: any) => void\r\n    errorMessage: string | null\r\n   \r\n}\r\n\r\nconst ProfileDataFormik: React.FC<PropsType> = ({ profile, onSubmit, errorMessage }) => {\r\n\r\n    return <Formik\r\n        initialValues={\r\n            {\r\n                fullName: profile.fullName,\r\n                lookingForAJob: false,\r\n                lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                aboutMe: profile.aboutMe,\r\n                contacts: profile.contacts\r\n            }}\r\n        validationSchema={Yup.object({\r\n            fullName: Yup.string().required('Required field'),\r\n            lookingForAJob: Yup.bool().required('Required field'),\r\n            lookingForAJobDescription: Yup.string().required('Required field'),\r\n            aboutMe: Yup.string().required('Required field'),\r\n            contacts: Yup.object().required('Required field'),\r\n        })}\r\n        onSubmit={onSubmit}>\r\n        {\r\n            formik => {\r\n                return <Form>\r\n                    <div>\r\n                        <b>FullName :</b>{profile.fullName}\r\n                        <FormControlsWithFormik control='input' name='fullName' placeholder='Write your name here' />\r\n                    </div>\r\n                    <div>\r\n                        <b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n                        <Field type='checkbox' name='lookingForAJob' />\r\n                    </div>\r\n                    <div>\r\n                        <b>My skills: </b>{profile.lookingForAJobDescription}\r\n                        <FormControlsWithFormik control='textarea' name='lookingForAJobDescription' placeholder='My skills' />\r\n                    </div>\r\n                    <div>\r\n                        <b>About me: </b>{profile.aboutMe}\r\n                        <FormControlsWithFormik control='textarea' name='aboutMe' placeholder='About me' />\r\n                    </div>\r\n                    <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key}>\r\n                            {key}: <FormControlsWithFormik key={key} control='input' name={'contacts.' + key} placeholder={key} />\r\n                        </div>\r\n                    })}</div>\r\n                    <div>\r\n                    <button type='submit'>Save</button>{errorMessage}\r\n                    </div>\r\n                </Form>\r\n            }\r\n        }\r\n    </Formik>\r\n}\r\n\r\nexport default ProfileDataFormik;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader';\r\n//import ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport userPhoto from '../../../images/headerOptions/user.svg';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataFormik from './ProfileDataFormik';\r\nimport { ContactsType, ProfileType } from '../../../types/types';\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isOwner: boolean\r\n    errorMessage: string | null\r\n    updateStatusThunk: (status: string) => void\r\n    savePhotoThunk: (file: File) => void\r\n    saveProfileThunk: (profile: ProfileType) => any\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({ \r\n    profile, status, updateStatusThunk, isOwner, savePhotoThunk, saveProfileThunk, authorizedUserId, errorMessage }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const hiddenFileInput = React.createRef<HTMLInputElement>();\r\n\r\n    const handleClick = () => {\r\n        hiddenFileInput.current!.click();\r\n    }\r\n\r\n    const onPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhotoThunk(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (values: ProfileType) => {\r\n        saveProfileThunk(values).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return <div className={classes.profile_info}>\r\n        <div className={classes.img_container}>\r\n            <img className={classes.img} src={profile.photos.large || userPhoto} alt=\"\" />\r\n            {isOwner && <div>\r\n                <button onClick={handleClick}>Change Photo</button>\r\n                <input className={classes.profile_photo_input} ref={hiddenFileInput} type='file' onChange={onPhotoSelected} /></div>}\r\n            <ProfileStatusWithHooks \r\n                profile={profile} \r\n                authorizedUserId={authorizedUserId} \r\n                status={status} \r\n                updateStatusThunk={updateStatusThunk} \r\n                />\r\n        </div>\r\n        <div className={classes.profile_data}>\r\n            {editMode\r\n                ? <ProfileDataFormik initialValues={profile} profile={profile} onSubmit={onSubmit} errorMessage={errorMessage}/>\r\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => any\r\n} \r\n\r\n\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        \r\n        <div className={classes.profile_data_item}><b>FullName :</b>{profile.fullName}</div>\r\n        <div className={classes.profile_data_item}><b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        {profile.lookingForAJob &&\r\n            <div className={classes.profile_data_item}><b>My skills: </b>{profile.lookingForAJobDescription}</div>\r\n        }\r\n\r\n        <div className={classes.profile_data_item}><b>About me: </b>{profile.aboutMe}</div>\r\n        <div className={classes.profile_data_item}><b>Contacts:</b>{Object.keys(profile.contacts).map((key) => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} /> // [index: string]: string\r\n\r\n        })}</div>\r\n        {isOwner && <div><button className={classes.profile_data_item} onClick={goToEditMode}>Edit</button></div>}\r\n\r\n    </div>\r\n}\r\n\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\r\n    return <div>\r\n       <div className={classes.profile_data_item}><b> {contactTitle}</b>: <span>{contactValue}</span></div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M83.578,167.256H16.716C7.524,167.256,0,174.742,0,183.971v300.881c0,9.225,7.491,16.713,16.716,16.713h66.862 c9.225,0,16.716-7.489,16.716-16.713V183.971C100.294,174.742,92.769,167.256,83.578,167.256z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M470.266,167.256c-2.692-0.456-128.739,0-128.739,0l17.606-48.032c12.148-33.174,4.283-83.827-29.424-101.835 c-10.975-5.864-26.309-8.809-38.672-5.697c-7.09,1.784-13.321,6.478-17.035,12.767c-4.271,7.233-3.83,15.676-5.351,23.696 c-3.857,20.342-13.469,39.683-28.354,54.2c-25.952,25.311-106.571,98.331-106.571,98.331v267.45h278.593 c37.592,0.022,62.228-41.958,43.687-74.749c22.101-14.155,29.66-43.97,16.716-66.862c22.102-14.155,29.66-43.97,16.716-66.862 C527.572,235.24,514.823,174.792,470.266,167.256z\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgLike = function SvgLike(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.999 511.999\",\n    style: {\n      enableBackground: \"new 0 0 511.999 511.999\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLike, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/like.c82941a4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport UserImg from './../../../../images/sideBar/user.svg';\r\nimport { useState } from 'react';\r\nimport { ReactComponent as LikesCountImg } from './../../../../images/like.svg';\r\nimport { ProfileType } from '../../../../types/types';\r\n\r\ntype PropsType = {\r\n    likesCount: number\r\n    message: string\r\n    profile: ProfileType | null\r\n    deletePost: (postID: number) => void\r\n    id: number\r\n}\r\n\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n    let [likesCount, setLikesCount] = useState(props.likesCount);\r\n\r\n    let userPhoto = UserImg;\r\n    if (props.profile) {\r\n        if (props.profile.photos.small) userPhoto = props.profile.photos.small;\r\n    }\r\n\r\n    const onSetLikesCount = (event: React.MouseEvent) => {\r\n        event.preventDefault()\r\n        setLikesCount(likesCount + 1)\r\n    }\r\n\r\n    const onDeletePost = (event: React.MouseEvent) => {\r\n        event.preventDefault()\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.post__item}>\r\n                <div className={classes.post___content}>\r\n                    <img className={classes.img} src={userPhoto} alt=\"\" />\r\n                    {props.profile && <h3 className={classes.name}>{props.profile.fullName}</h3>}\r\n                </div>\r\n                <button className={classes.delete_button} onClick={onDeletePost}>DELETE</button>\r\n            </div>\r\n            <div>\r\n                <p className={classes.post_message}>{props.message}</p>\r\n\r\n                <div className={classes.likes_container}>\r\n                    <div >\r\n                        <LikesCountImg\r\n                            className={`${classes.likes} ${(likesCount > 0) && classes.liked}`}\r\n                            onClick={(event) => onSetLikesCount(event)}\r\n                        />\r\n                    </div>\r\n                    <b> {likesCount}</b>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from '../Profile.module.css';\r\nimport Post from './Posts/Post';\r\nimport UserImg from '../../../images/sideBar/user.svg';\r\n// import { Field, reduxForm, reset } from 'redux-form';\r\n// import { required,  maxLengthCreator } from '../../../utils/validators/validators';\r\n// import { Textarea } from '../../common/FormControls/FormControls.jsx';\r\nimport Preloader from '../../common/Preloader';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik';\r\nimport { PostsType, ProfileType } from '../../../types/types';\r\n\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsType> \r\n    profile: ProfileType | null\r\n    addPost: (newPostText: string, newPostId: number) => void\r\n    deletePost: (postID: number) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n\r\ndebugger;\r\n    console.log('RENDER');\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    let userPhoto = UserImg;\r\n    if (props.profile.photos.small) {\r\n        userPhoto = props.profile.photos.small;\r\n    }\r\n\r\n    let postsElements = [...props.posts].map(post =>\r\n         <Post profile={props.profile} key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} deletePost={props.deletePost} />)\r\n\r\n    let newPostId = props.posts.length + 2;\r\n\r\n\r\n    const addPostText = (values: any) => {\r\n        debugger\r\n         props.addPost(values.newPostText, newPostId);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div>\r\n                <div className={classes.postForm}>\r\n                    <div className={classes.user}>\r\n                        <img className={classes.userImg} src={userPhoto} alt=\"\" />\r\n                    <h3>{props.profile.fullName}</h3>\r\n                    </div>\r\n                    <div className={classes.addPost}>\r\n                        <div className={classes.addPost_item}>\r\n                           <AddPostFormik onSubmit={addPostText} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { postsElements}\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\ntype AddPostFormikType = {\r\n    onSubmit: (newPostText: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<AddPostFormikType> = (props) => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostText: ''}}\r\n            validationSchema={Yup.object({\r\n                newPostText: Yup.string().required('Cannot send an empty post').max(50)\r\n            })}\r\n            onSubmit={(values: any, {resetForm}) => {\r\n                props.onSubmit(values);\r\n                debugger\r\n                resetForm();\r\n            }}\r\n        >\r\n            {\r\n                formik => {\r\n                    return <Form>\r\n                        <FormControlsWithFormik \r\n                            control='textarea'\r\n                            name='newPostText'\r\n                            placeholder='Write your text here'\r\n                        />\r\n                        <button className={classes.button} type='submit'>Send</button>\r\n                    </Form>\r\n\r\n                }\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nconst MyPostsMemorized = React.memo(MyPosts)\r\n\r\nexport default MyPostsMemorized;\r\n\r\n// let  maxLength50 = maxLengthCreator(50);\r\n\r\n\r\n\r\n// const AddPostForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} >\r\n//             <Field rows='5' cols='70' \r\n//             component={Textarea} \r\n//             name='newPostText' \r\n//             validate={[required, maxLength50]} \r\n//             placeholder={'Write your text here'}\r\n//              />\r\n//             <button>Add post</button>\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n// const afterSubmit = (result, dispatch) =>\r\n//      dispatch(reset('post'));\r\n\r\n// const AddPostReduxForm = reduxForm({\r\n//     form: 'post',\r\n//     onSubmitSuccess: afterSubmit,\r\n// })(AddPostForm);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport { PostsType, ProfileType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n    posts: Array<PostsType> \r\n    profile: ProfileType | any\r\n    isOwner: boolean\r\n    errorMessage: string | null\r\n\r\n    getProfileThunk: (userId: number) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    savePhotoThunk: (file: any) => void\r\n    saveProfileThunk: (profile: ProfileType) => void\r\n    addPost: (newPostText: string, newPostId: number) => void\r\n    deletePost: (postID: number) => void\r\n  \r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return <div className={classes.profile} >\r\n\r\n        <ProfileInfo {...props}\r\n            isOwner={props.isOwner}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            authorizedUserId={props.authorizedUserId}\r\n            updateStatusThunk={props.updateStatusThunk}\r\n            saveProfileThunk={props.saveProfileThunk}\r\n            savePhotoThunk={props.savePhotoThunk}\r\n            errorMessage={props.errorMessage}\r\n            \r\n         />\r\n        <MyPosts {...props}/>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    updateStatusThunk,\r\n    savePhotoThunk,\r\n    saveProfileThunk,\r\n    actionsProfileReducer,\r\n} from '../../reduxx/profile-reducer';\r\nimport { withRouter, RouteComponentProps} from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from '../../reduxx/redux-store';\r\nimport { PostsType, ProfileType } from '../../types/types';\r\n\r\n\r\ntype RouteComponentParamsProps = {\r\n    userId: string\r\n}\r\n\r\ntype OwnPropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | any\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n    posts: Array<PostsType>\r\n    errorMessage: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    savePhotoThunk: (file: any) => void\r\n    saveProfileThunk: (profile: ProfileType) => void\r\n    addPost: (newPostText: string, newPostId: number) => void\r\n    deletePost: (postID: number) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType & RouteComponentProps<RouteComponentParamsProps>\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile = () => {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n     \r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if(!userId) {\r\n            console.error('UserID should exist!!!')\r\n        } else {\r\n            this.props.getProfileThunk(userId);\r\n            this.props.getStatusThunk(userId);\r\n        }\r\n       \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps: PropsType, prevState: PropsType, snapshot: PropsType) => {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatusThunk={this.props.updateStatusThunk}\r\n                savePhotoThunk={this.props.savePhotoThunk}\r\n                saveProfileThunk={this.props.saveProfileThunk}\r\n                authorizedUserId={this.props.authorizedUserId}\r\n                posts={this.props.posts}\r\n                errorMessage={this.props.errorMessage}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    posts: state.profilePage.posts,\r\n    errorMessage: state.profilePage.errorMessage\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppRootStateType>(mapStateToProps, {\r\n        getProfileThunk,\r\n        getStatusThunk,\r\n        updateStatusThunk,\r\n        savePhotoThunk,\r\n        saveProfileThunk,\r\n        addPost: actionsProfileReducer.addPost,\r\n        deletePost: actionsProfileReducer.deletePost\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}