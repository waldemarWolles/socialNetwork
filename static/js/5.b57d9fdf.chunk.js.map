{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/withAuthRedirect.jsx","components/Messages/Messages.module.css","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","children","Textarea","restProps","Input","createField","placeholder","validators","name","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","id","className","classes","item","src","UserImg","alt","Message","message","maxLength50","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Messages","dialogsElements","dialogs","map","dialog","messagesElements","messages","messagesArticle","values","addMessage","newMessageText","compose","messagesPage","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/5.b57d9fdf.chunk.js","sourcesContent":["import classes from './FormControls.module.css';\r\nimport React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span >{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const createField = (placeholder, validators, name, component, props = {}, text = '') => (\r\n    <div>\r\n         <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props} />{text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__4c7Yh\",\"error\":\"FormControls_error__uKFST\"};","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is reauired';\r\n}\r\n\r\n\r\nexport const maxLengthCreator= (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `max length ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectdAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n\r\n    return ConnectdAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesArticle\":\"Messages_messagesArticle__28grW\",\"dialogs\":\"Messages_dialogs__lRzIq\",\"item\":\"Messages_item__nE3mS\",\"messages\":\"Messages_messages__1biBM\",\"active\":\"Messages_active__2Q2AD\"};","import React from 'react';\r\nimport classes from './Messages.module.css';\r\nimport UserImg from '../../images/sideBar/user.svg';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../reduxx/messages-reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={'/messages/' + props.id} className={`${classes.item} `} >\r\n                <img src={UserImg} alt=\"\" />{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.item}><img src={UserImg} alt=\"\" />{props.message}</div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n    let dialogsElements = props.dialogs.map((dialog) => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messagesElements = props.messages.map((message) => <Message message={message.message} />);\r\n\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    return <div id={classes.messagesArticle} className={classes.messagesArticle} >\r\n\r\n        <div className={classes.dialogs}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            {messagesElements}\r\n            <MessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field component={Textarea} validate={[required, maxLength50]} name='newMessageText' placeholder={'Write your message'} />\r\n            <div><button>Add Message</button></div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'message'\r\n  })(AddMessageForm)\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport classes from './Messages.module.css';\r\nimport UserImg from '../../images/sideBar/user.svg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../reduxx/messages-reducer';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../common/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messagesPage.messages,\r\n        dialogs: state.messagesPage.dialogs,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages)\r\n\r\n"],"sourceRoot":""}