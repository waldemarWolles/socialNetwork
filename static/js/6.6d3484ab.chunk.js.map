{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControlsWithFormik.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormControls/FormControls.jsx","components/Profile/Profile.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileDataFormik.js","components/Profile/ProfileInfo/ProfileInfo.jsx","images/like.svg","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Textarea","props","label","name","key","rest","className","classes","formik_controls","htmlFor","as","id","component","ErrorText","Input","CheckBoxes","options","field","map","option","Fragment","type","value","checked","includes","error","children","FormControlsWithFormik","control","FormControl","input","meta","child","hasError","touched","restProps","createField","placeholder","validators","text","validate","ProfileStatusWithHooks","reduxForm","form","handleSubmit","profile","onSubmit","form_error","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","useState","editMode","setEditMode","status","setStatus","hover","setHover","useEffect","status_text","onMouseOver","onMouseOut","onDoubleClick","authorizedUserId","userId","status_popup","onChange","e","currentTarget","autoFocus","onBlur","updateStatusThunk","ProfileDataFormik","initialValues","validationSchema","Yup","required","formik","ProfileData","isOwner","goToEditMode","profile_data_item","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhotoThunk","saveProfileThunk","Preloader","hiddenFileInput","React","createRef","profile_info","img_container","img","src","photos","large","userPhoto","alt","current","click","profile_photo_input","ref","target","files","length","profile_data","values","then","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref","svgRef","title","x","y","viewBox","style","enableBackground","xmlSpace","ForwardRef","forwardRef","Post","likesCount","setLikesCount","UserImg","small","post","post__item","post_message","message","likes_container","likes","liked","LikesCountImg","MyPosts","memo","console","log","postsElements","posts","postForm","user","userImg","addPost","addPost_item","newPostText","AddPostFormik","max","resetForm","button","Profile","updateNewPostText","ProfileContainer","refreshProfile","match","params","history","push","getProfileThunk","getStatusThunk","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","Component","compose","connect","state","profilePage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/6.6d3484ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__4c7Yh\",\"error\":\"FormControls_error__uKFST\",\"App\":\"FormControls_App__3XoIW\",\"input\":\"FormControls_input__229Xk\",\"forms_control\":\"FormControls_forms_control__1AmpX\"};","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport { Field, ErrorMessage } from 'formik';\r\n\r\nconst FormControlsWithFormik = (props) => {\r\n    const { control, ...rest } = props;\r\n    switch (control) {\r\n        case 'input':\r\n            return <Input {...rest} />\r\n        case 'textarea':\r\n            return <Textarea {...rest} />\r\n        case 'checkbox':\r\n           return <CheckBoxes {...rest} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nconst Textarea = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field as='textarea' key={key} id={name} name={name} {...rest}/>\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\nconst Input = (props) => {\r\n    const { label, name, key, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field id={name} key={key} name={name} {...rest} />\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CheckBoxes = (props) => {\r\n    const { label, name, options, ...rest } = props;\r\n    return (\r\n        <div className={classes.formik_controls}>\r\n           <label>{label}</label>\r\n           <Field name={name} {...rest}>\r\n                {\r\n                    ({field}) => {\r\n                      return options.map(option => {\r\n                          return (\r\n                          <React.Fragment key={option.key}>\r\n                             <input \r\n                                type=\"checkbox\"\r\n                                id={option.value}\r\n                                {...field}\r\n                                value={option.value}\r\n                                checked={field.value.includes(option.value)}\r\n                             />\r\n                             <label htmlFor={option.value}>{option.key}</label>\r\n                          </React.Fragment>\r\n                            )\r\n                    \r\n                      })\r\n                    }\r\n                }\r\n           </Field>\r\n           <ErrorMessage name={name} component={ErrorText} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ErrorText = (props) => {\r\n    return <div className={classes.error} >\r\n        {props.children}\r\n    </div>\r\n}\r\n    \r\n    \r\n\r\n\r\nexport default FormControlsWithFormik;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info\":\"ProfileInfo_profile_info__3V6jF\",\"img_container\":\"ProfileInfo_img_container__1spJ7\",\"img\":\"ProfileInfo_img__OSL9u\",\"profile_photo_input\":\"ProfileInfo_profile_photo_input__2nWkW\",\"status\":\"ProfileInfo_status__2fcwA\",\"status_text\":\"ProfileInfo_status_text__2f3G-\",\"form_error\":\"ProfileInfo_form_error__iEUvC\",\"profile_data\":\"ProfileInfo_profile_data__2nEVh\",\"profile_data_item\":\"ProfileInfo_profile_data_item__v-S0Q\",\"status_popup\":\"ProfileInfo_status_popup__oMm17\",\"addPost_item\":\"ProfileInfo_addPost_item__y29qq\"};","import classes from './FormControls.module.css';\r\nimport React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span >{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <div>\r\n            <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const createField = (placeholder, validators, name, component, props = {}, text = '') => (\r\n    <div>\r\n         <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props} />{text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__F8YN9\",\"userImg\":\"Profile_userImg__2qokz\",\"user\":\"Profile_user__DrajQ\",\"postForm\":\"Profile_postForm__2-TE4\",\"addPost\":\"Profile_addPost__1Ck26\",\"button\":\"Profile_button__1kYAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3rTv6\",\"post\":\"Post_post__3PbZK\",\"post__item\":\"Post_post__item__2S5Qo\",\"post_message\":\"Post_post_message__3IWbM\",\"likes_container\":\"Post_likes_container__1i5gj\",\"likes\":\"Post_likes__36odM\",\"liked\":\"Post_liked__yrO5v\"};","import React, { useEffect, useState } from 'react';\r\nimport classes from './../ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let [hover, setHover] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        if (props.authorizedUserId === props.profile.userId) {\r\n            setEditMode(true);\r\n        }\r\n\r\n    }\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    const handleMouseIn = () => {\r\n        setHover(true);\r\n    }\r\n\r\n    const handleMouseOut = () => {\r\n        setHover(false);\r\n    }\r\n\r\n    debugger;\r\n    return <div className={classes.status}>\r\n\r\n        {!editMode &&\r\n            <div className={classes.status_text}>\r\n                <div >\r\n                    <b>Status: </b>\r\n                    <span \r\n                        onMouseOver={handleMouseIn}\r\n                        onMouseOut={handleMouseOut}\r\n                        onDoubleClick={activatedEditMode}> {props.status || 'there is no status'}\r\n                    </span>\r\n                </div>\r\n                {hover && props.authorizedUserId === props.profile.userId &&\r\n                    <div className={classes.status_popup}>DoubleClick to change status</div>}\r\n            </div>\r\n        }\r\n\r\n        {editMode &&\r\n            <div>\r\n                <b>Status: </b>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivatedEditMode} value={status} />\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n         {error && <div className={classes.form_error}>\r\n          {error}\r\n        </div>}\r\n        <div>\r\n            <b>FullName :</b>{profile.fullName}\r\n            {createField('Full name', [], 'fullName', Input)}\r\n        </div>\r\n        <div>\r\n            <b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n            {createField('', [], 'lookingForAJob', Input, { type: 'checkbox' })}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My skills: </b>{profile.lookingForAJobDescription}\r\n            {createField('My skills', [], 'lookingForAJobDescription', Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me: </b>{profile.aboutMe}\r\n            {createField('About me', [], 'aboutMe', Textarea)}\r\n        </div>\r\n        <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n        return <div>\r\n            {key}: {createField(key, [], 'contacts.' + key, Input)}\r\n        </div>\r\n    })}</div>\r\n     <div><button>Save</button></div>\r\n         \r\n\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'edit_profile'\r\n  })(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik';\r\nimport classes from './ProfileInfo.module.css';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nconst ProfileDataFormik = ({ profile, onSubmit }) => {\r\n\r\n    \r\n\r\n\r\n    return <Formik\r\n        initialValues={\r\n            {\r\n                fullName: profile.fullName,\r\n                lookingForAJob: false,\r\n                lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                aboutMe: profile.aboutMe,\r\n                contacts: profile.contacts\r\n            }}\r\n        validationSchema={Yup.object({\r\n            fullName: Yup.string().required('Required field'),\r\n            lookingForAJob: Yup.bool().required('Required field'),\r\n            lookingForAJobDescription: Yup.string().required('Required field'),\r\n            aboutMe: Yup.string().required('Required field'),\r\n            contacts: Yup.object().required('Required field'),\r\n        })}\r\n        onSubmit={onSubmit}>\r\n        {\r\n            formik => {\r\n                return <Form>\r\n                    <div>\r\n                        <b>FullName :</b>{profile.fullName}\r\n                        <FormControlsWithFormik control='input' name='fullName' placeholder='Write your name here' />\r\n                    </div>\r\n                    <div>\r\n                        <b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n                        <Field type='checkbox' name='lookingForAJob' />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <b>My skills: </b>{profile.lookingForAJobDescription}\r\n                        <FormControlsWithFormik control='textarea' name='lookingForAJobDescription' placeholder='My skills' />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <b>About me: </b>{profile.aboutMe}\r\n\r\n                        <FormControlsWithFormik control='textarea' name='aboutMe' placeholder='About me' />\r\n                    </div>\r\n                    <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key}>\r\n                            {key}: <FormControlsWithFormik key={key} control='input' name={'contacts.' + key} placeholder={key} />\r\n                        </div>\r\n                    })}</div>\r\n\r\n\r\n                    <div><button type='submit'>Save</button></div>\r\n                </Form>\r\n            }\r\n        }\r\n    </Formik>\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfileDataFormik;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader';\r\n//import ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport userPhoto from '../../../images/headerOptions/user.svg';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataFormik from './ProfileDataFormik';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatusThunk, isOwner, savePhotoThunk, saveProfileThunk, authorizedUserId }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const hiddenFileInput = React.createRef(null);\r\n\r\n    const handleClick = (e) => {\r\n        hiddenFileInput.current.click();\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhotoThunk(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        saveProfileThunk(values).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return <div className={classes.profile_info}>\r\n        <div className={classes.img_container}>\r\n            <img className={classes.img} src={profile.photos.large || userPhoto} alt=\"\" />\r\n            {isOwner && <div>\r\n                <button onClick={handleClick}>Change Photo</button>\r\n                <input className={classes.profile_photo_input} ref={hiddenFileInput} type='file' onChange={onPhotoSelected} /></div>}\r\n            <ProfileStatusWithHooks \r\n                profile={profile} \r\n                authorizedUserId={authorizedUserId} \r\n                status={status} \r\n                updateStatusThunk={updateStatusThunk} \r\n                />\r\n        </div>\r\n        <div className={classes.profile_data}>\r\n            {editMode\r\n                ? <ProfileDataFormik initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        \r\n        <div className={classes.profile_data_item}><b>FullName :</b>{profile.fullName}</div>\r\n        <div className={classes.profile_data_item}><b>LookingForAJob: </b>{profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        {profile.lookingForAJob &&\r\n            <div className={classes.profile_data_item}><b>My skills: </b>{profile.lookingForAJobDescription}</div>\r\n        }\r\n\r\n        <div className={classes.profile_data_item}><b>About me: </b>{profile.aboutMe}</div>\r\n        <div className={classes.profile_data_item}><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}</div>\r\n        {isOwner && <div><button className={classes.profile_data_item} onClick={goToEditMode}>Edit</button></div>}\r\n\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div>\r\n       <div className={classes.profile_data_item}><b> {contactTitle}</b>: <span>{contactValue}</span></div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M83.578,167.256H16.716C7.524,167.256,0,174.742,0,183.971v300.881c0,9.225,7.491,16.713,16.716,16.713h66.862 c9.225,0,16.716-7.489,16.716-16.713V183.971C100.294,174.742,92.769,167.256,83.578,167.256z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"current\",\n  d: \"M470.266,167.256c-2.692-0.456-128.739,0-128.739,0l17.606-48.032c12.148-33.174,4.283-83.827-29.424-101.835 c-10.975-5.864-26.309-8.809-38.672-5.697c-7.09,1.784-13.321,6.478-17.035,12.767c-4.271,7.233-3.83,15.676-5.351,23.696 c-3.857,20.342-13.469,39.683-28.354,54.2c-25.952,25.311-106.571,98.331-106.571,98.331v267.45h278.593 c37.592,0.022,62.228-41.958,43.687-74.749c22.101-14.155,29.66-43.97,16.716-66.862c22.102-14.155,29.66-43.97,16.716-66.862 C527.572,235.24,514.823,174.792,470.266,167.256z\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgLike = function SvgLike(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.999 511.999\",\n    style: {\n      enableBackground: \"new 0 0 511.999 511.999\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLike, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/like.c82941a4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport UserImg from './../../../../images/sideBar/user.svg';\r\nimport { useState } from 'react';\r\nimport { ReactComponent as LikesCountImg } from './../../../../images/like.svg';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    let [likesCount, setLikesCount] = useState(props.likesCount);\r\n\r\n    let userPhoto = UserImg;\r\n    if (props.profile.photos.small) {\r\n        userPhoto = props.profile.photos.small;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.post__item}>\r\n                <img className={classes.img} src={userPhoto} alt=\"\" />\r\n                <h3 className={classes.name}>{props.profile.fullName}</h3>\r\n            </div>\r\n            <div>\r\n                <p className={classes.post_message}>{props.message}</p>\r\n\r\n                <div className={classes.likes_container}>\r\n                   <div >\r\n                   <LikesCountImg\r\n                        className={`${classes.likes} ${(likesCount > 0) && classes.liked}`} \r\n                        onClick={() => {setLikesCount(likesCount + 1)}}\r\n                        src={LikesCountImg} alt=\"\" />\r\n                   </div>\r\n                     <b> {likesCount}</b>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from '../Profile.module.css';\r\nimport Post from './Posts/Post';\r\nimport UserImg from '../../../images/sideBar/user.svg';\r\n// import { Field, reduxForm, reset } from 'redux-form';\r\n// import { required,  maxLengthCreator } from '../../../utils/validators/validators';\r\n// import { Textarea } from '../../common/FormControls/FormControls.jsx';\r\nimport Preloader from '../../common/Preloader';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormControlsWithFormik from '../../common/FormControls/FormControlsWithFormik';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\ndebugger;\r\n    console.log('RENDER');\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    let userPhoto = UserImg;\r\n    if (props.profile.photos.small) {\r\n        userPhoto = props.profile.photos.small;\r\n    }\r\n\r\n    let postsElements = [...props.posts].map(post => <Post profile={props.profile} key={post.id} message={post.message} likesCount={post.likesCount} />)\r\n\r\n\r\n    let addPostText = (values) => {\r\n         props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div>\r\n                <div className={classes.postForm}>\r\n                    <div className={classes.user}>\r\n                        <img className={classes.userImg} src={userPhoto} alt=\"\" />\r\n                    <h3>{props.profile.fullName}</h3>\r\n                    </div>\r\n                    <div className={classes.addPost}>\r\n                        <div className={classes.addPost_item}>\r\n                           <AddPostFormik onSubmit={addPostText} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { postsElements}\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n});\r\n\r\nconst AddPostFormik = (props) => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostText: '' }}\r\n            validationSchema={Yup.object({\r\n                newPostText: Yup.string().required('Cannot send an empty post').max(50)\r\n            })}\r\n            onSubmit={(values, {resetForm}) => {\r\n                props.onSubmit(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {\r\n                formik => {\r\n                    return <Form>\r\n                        <FormControlsWithFormik \r\n                            control='textarea'\r\n                            name='newPostText'\r\n                            placeholder='Write your text here'\r\n                        />\r\n                        <button className={classes.button} type='submit'>Send</button>\r\n                    </Form>\r\n\r\n                }\r\n            }\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n// let  maxLength50 = maxLengthCreator(50);\r\n\r\n\r\n\r\n// const AddPostForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} >\r\n//             <Field rows='5' cols='70' \r\n//             component={Textarea} \r\n//             name='newPostText' \r\n//             validate={[required, maxLength50]} \r\n//             placeholder={'Write your text here'}\r\n//              />\r\n//             <button>Add post</button>\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n// const afterSubmit = (result, dispatch) =>\r\n//      dispatch(reset('post'));\r\n\r\n// const AddPostReduxForm = reduxForm({\r\n//     form: 'post',\r\n//     onSubmitSuccess: afterSubmit,\r\n// })(AddPostForm);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div className={classes.profile} >\r\n\r\n        <ProfileInfo\r\n            saveProfileThunk={props.saveProfileThunk}\r\n            savePhotoThunk={props.savePhotoThunk}\r\n            isOwner={props.isOwner}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatusThunk={props.updateStatusThunk}\r\n            authorizedUserId={props.authorizedUserId}\r\n         />\r\n        <MyPosts \r\n        posts={props.posts}\r\n        newPostText={props.newPostText}\r\n        profile={props.profile} \r\n        addPost={props.addPost}\r\n        updateNewPostText={props.updateNewPostText}\r\n        authorizedUserId={props.authorizedUserId}\r\n        />\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    updateStatusThunk,\r\n    savePhotoThunk,\r\n    saveProfileThunk,\r\n    addPost,\r\n    updateNewPostText\r\n} from '../../reduxx/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatusThunk={this.props.updateStatusThunk}\r\n                savePhotoThunk={this.props.savePhotoThunk}\r\n                saveProfileThunk={this.props.saveProfileThunk}\r\n                authorizedUserId={this.props.authorizedUserId}\r\n                posts={this.props.posts}\r\n                newPostText={this.props.newPostText}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { \r\n        getProfileThunk, \r\n        getStatusThunk, \r\n        updateStatusThunk, \r\n        savePhotoThunk, \r\n        saveProfileThunk, \r\n        addPost, \r\n        updateNewPostText }),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}