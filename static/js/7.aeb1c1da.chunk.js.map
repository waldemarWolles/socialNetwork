{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/withAuthRedirect.tsx","images/headerOptions/user.svg","components/Users/Users.module.css","components/common/Paginator/Paginator.tsx","components/common/Paginator/Paginator.module.css","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/index.js","reduxx/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToProps","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","module","exports","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","classes","paginator","onClick","disabledButton","disabled","filter","p","map","cn","selectedPage","pageNumber","key","e","User","user","followingInProgress","unfollowThunk","followThunk","u","id","user_photo","width","src","photos","small","userPhoto","alt","user_info","user_info_item","name","status","followed","some","Users","totalUsersCount","users","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","getDependencies","funcs","dependencies","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","componentDidMount","getUsersThunk","setCurrentPage","this","Preloader","React","Component","compose","actionsUsersReducer"],"mappings":"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","file":"static/js/7.aeb1c1da.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppRootStateType } from '../../reduxx/redux-store';\r\n\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    \r\n\r\n    const RedirectComponent: React.FC<MapStatePropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n        return <WrappedComponent {...restProps as WCP} />\r\n    }\r\n\r\n\r\n\r\n    return connect<MapStatePropsType, unknown, WCP, AppRootStateType>(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.c3dacb0b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__no7MC\",\"preloader\":\"Users_preloader__1CuV5\",\"user\":\"Users_user__25gTX\",\"user_photo\":\"Users_user_photo__HKg5u\",\"user_info\":\"Users_user_info__2NFH-\",\"user_info_item\":\"Users_user_info_item__2GVsv\"};","import React from 'react' \r\nimport classes from './Paginator.module.css' \r\nimport cn from 'classnames' \r\nimport { useState } from 'react' \r\n\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number\r\n   pageSize: number\r\n   currentPage: number\r\n   onPageChanged: (pageNumber: number) => void \r\n   portionSize?: number\r\n}\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize) \r\n  let pages: Array<number> = []\r\n  for (let i = 1;  i <= pagesCount;  i++) {\r\n    pages.push(i)\r\n  }\r\n\r\ndebugger \r\n  let portionCount = Math.ceil(pagesCount / portionSize) \r\n  let [portionNumber, setPortionNumber] = useState(1) \r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1 \r\n  let rightPortionPageNumber = portionNumber * portionSize \r\n\r\ndebugger \r\n  return <div className={classes.paginator}>\r\n   \r\n      {portionNumber > 1\r\n        ? <button onClick={() => { portionNumber >= 2 && setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n        : <button className={classes.disabledButton} disabled={true}>PREV</button>\r\n\r\n      }\r\n      <div className={classes.pages}>\r\n        {pages\r\n          .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n          .map((p) => {\r\n            return <span className={cn({ [classes.selectedPage]: currentPage === p }, classes.pageNumber)}\r\n              key={p}\r\n              onClick={(e) => { onPageChanged(p) }}\r\n            >{p}</span>\r\n          })}\r\n      </div>\r\n\r\n      {portionCount > portionNumber\r\n        ? <button onClick={() => { portionNumber < portionCount && setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n        : <button className={classes.disabledButton} disabled={true}>NEXT</button>\r\n      }\r\n\r\n    </div>\r\n\r\n \r\n}\r\n\r\nexport default Paginator \r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3ERx8\",\"disabledButton\":\"Paginator_disabledButton__CC9kU\",\"paginator\":\"Paginator_paginator__WFnS9\",\"pages\":\"Paginator_pages__iXExM\",\"pageNumber\":\"Paginator_pageNumber__3DpB-\"};","import React from 'react';\r\nimport userPhoto from '../../images/headerOptions/user.svg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Users.module.css';\r\nimport { UserType } from '../../types/types';\r\n\r\n\r\ntype PropsType = {\r\n  user: UserType\r\n  followingInProgress: Array<number>\r\n\r\n\r\n  unfollowThunk: (userId: number) => void\r\n  followThunk: (userId: number) => void\r\n}\r\n\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollowThunk, followThunk }) => {\r\n\r\n  let u = user\r\n  return (\r\n\r\n    <div className={classes.user}>\r\n      <div>\r\n        <NavLink to={'profile/' + u.id} >\r\n          <img className={classes.user_photo} width='150' src={u.photos.small !== null ? u.photos.small : userPhoto} alt=\"\" />\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.user_info}>\r\n        <div className={classes.user_info_item}>Name: {u.name}</div>\r\n        <div className={classes.user_info_item}>Status:{u.status}</div>\r\n        <div className={classes.user_info_item}>\r\n          {u.followed\r\n            ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n              unfollowThunk(u.id);\r\n            }}>Unfollow</button>\r\n            : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n              followThunk(u.id);\r\n            }}>Follow</button>}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default User;\r\n\r\n","import React from 'react' \r\nimport classes from './Users.module.css' \r\nimport Paginator from '../common/Paginator/Paginator' \r\nimport User from './User' \r\nimport { UserType } from '../../types/types'\r\n\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number \r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n\r\n\r\n  onPageChanged: (pageNumber: number) => void \r\n  unfollowThunk: (userId: number) => void\r\n  followThunk: (userId: number) => void\r\n \r\n}\r\n\r\n\r\nconst Users: React.FC<PropsType> = ({ totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props }) => {\r\n  return (\r\n\r\n    <div className={classes.users}>\r\n\r\n      <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n\r\n      {users.map(u => \r\n      \r\n      <User\r\n        user={u} key={u.id}\r\n        followingInProgress={props.followingInProgress}\r\n        unfollowThunk={props.unfollowThunk} followThunk={props.followThunk} />\r\n       )}\r\n        \r\n      </div>\r\n    ) \r\n\r\n}\r\n\r\nexport default Users \r\n\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { AppRootStateType } from './redux-store';\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    });\r\n\r\nexport const getPageSize = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport {\r\n    getUsersThunk,\r\n    followThunk,\r\n    unfollowThunk,\r\n    actionsUsersReducer,\r\n} from '../../reduxx/users-reducer';\r\nimport Preloader from '../common/Preloader';\r\nimport {withAuthRedirect} from '../common/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../reduxx/users-selectors';\r\nimport { UserType } from '../../types/types';\r\nimport { AppRootStateType } from '../../reduxx/redux-store';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  users: Array<UserType>\r\n  followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  followThunk: (userId: number) => void\r\n  unfollowThunk: (userId: number) => void\r\n  setCurrentPage: (currentPage: number) => void\r\n  getUsersThunk:(currentPage: number, pageSize: number) => void\r\n}\r\n\r\n \r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n\r\n  componentDidMount = () => {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsersThunk(currentPage, pageSize);\r\n\r\n  }\r\n\r\n  onPageChanged = (currentPage: number) => {\r\n    const {pageSize} = this.props;\r\n    this.props.setCurrentPage(currentPage);\r\n    this.props.getUsersThunk(currentPage, pageSize);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<>\r\n      { this.props.isFetching ? <Preloader /> : null}\r\n      <Users\r\n        users={this.props.users}\r\n        pageSize={this.props.pageSize}\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        followingInProgress={this.props.followingInProgress}\r\n        followThunk={this.props.followThunk}\r\n        unfollowThunk={this.props.unfollowThunk}\r\n      />\r\n    </>);\r\n  }\r\n\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  }\r\n}\r\n\r\n\r\n//<TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect<MapStateToPropsType, MapDispatchToPropsType, unknown, AppRootStateType>(mapStateToProps, {\r\n    setCurrentPage: actionsUsersReducer.setCurrentPage,\r\n    getUsersThunk,\r\n    followThunk,\r\n    unfollowThunk\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n\r\n\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followAC(userId));\r\n//     },\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowAC(userId));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersAC(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPageAC(pageNumber));\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setTotalUsersCountAC(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingAC(isFetching));\r\n//     },\r\n//   }\r\n// }\r\n\r\n// follow: follow ==> follow etc\r\n\r\n\r\n"],"sourceRoot":""}